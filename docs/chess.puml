@startuml
left to right direction
hide empty members
title Диаграмма классов

class Board {
  -game: Game
  +squares: Squares
  +white_pieces: Piece[]
  +black_pieces: Piece[]
  +clear()
  +put_black_bishop_at(): Piece
  +put_black_king_at(): Piece
  +put_black_knight_at(): Piece
  +put_black_pawn_at(): Piece
  +put_black_queen_at(): Piece
  +put_black_rook_at(): Piece
  +put_white_bishop_at(): Piece
  +put_white_king_at(): Piece
  +put_white_knight_at(): Piece
  +put_white_pawn_at(): Piece
  +put_white_queen_at(): Piece
  +put_white_rook_at(): Piece
}
Board "1" *-- "32" Piece
Board "1" *-- "1" Squares
Squares "1" *-- "64" Square
note top of Squares
  Squares - это объект-коллекция, нужен
  для упрощения доступа к полям доски.
end note

enum Color {
  {static} + WHITE
  {static} + BLACK
}

class Game {
  -played_moves: Move[]
  +turn: Color {readOnly}
  +add_move(from: Square, to: Square)
  +is_over()
}
Game --> Color
Game "1" *-- "1" Board
Game "1" *-- "n" Move

class Move {
  -start_square: Square
  -end_square: Square
  -piece: Piece
  -captured_piece: Piece
  +do(board: Board)
}
Move --> Piece
Move --> Square
Move --> Board

enum MoveDirection {
  {static} + UP
  {static} + DOWN
}

class Pawn {
  +double_step: bool
  +move_direction: MoveDirection {readOnly}
  +promoted: bool {readOnly}
  +promote_to(piece_type: PieceType)
}
Pawn --> MoveDirection
Pawn --> PieceType

abstract class Piece {
  -board: Board
  +color: Color {readOnly}
  +moved: bool {readOnly}
  +place_at: Square {readOnly}
  -promoted_from: Piece
  {abstract} +attack_squares(): Square[]
  {abstract} +capture_free_moves(): Square[]
  {abstract} +captures(): Square[]
  {abstract} +valid_moves(): Square[]
  +is_black(): bool
  +is_white(): bool
  +is_bishop(): bool
  +is_king(): bool
  +is_knight(): bool
  +is_pawn(): bool
  +is_queen(): bool
  +is_rook(): bool
  +is_offboard(): bool
  +is_onboard(): bool
  +move_to()
  +put_at()
  +remove()
}
Piece --> Color
Piece <|.. Bishop
Piece <|.. King
Piece <|.. Knight
Piece <|.. Queen
Piece <|.. Rook
Piece <|.. Pawn

enum PieceType {
  {static} +BISHOP
  {static} +KING
  {static} +KNIGHT
  {static} +PAWN
  {static} +QUEEN
  {static} +ROOK
}

class Square {
  -all_squares: Squares
  +color: Color {readOnly}
  +file: str {readOnly}
  +rank: str {readOnly}
  +file_index: int {readOnly}
  +rank_index: int {readOnly}
  +piece: Piece
  +down: Square {readOnly}
  +left: Square {readOnly}
  +right: Square {readOnly}
  +up: Square {readOnly}
  +is_empty(): bool
  +is_downmost(): bool
  +is_leftmost(): bool
  +is_rightmost(): bool
  +is_topmost(): bool
  +is_on_board(): bool
  +is_off_board(): bool
}
Square --> Color
Square -- Piece
@enduml
